{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Codes\\\\Web Developmet\\\\doggies\\\\src\\\\WebIntro.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './WebIntro.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WebIntro = () => {\n  _s();\n  const [dogs, setDogs] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [searched, setSearched] = useState(false);\n  useEffect(() => {\n    const fetchDogData = async () => {\n      try {\n        const res = await fetch(\"https://api.thedogapi.com/v1/breeds\");\n        const data = await res.json();\n        setDogs(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    setSearched(false);\n    fetchDogData();\n  }, []);\n  const DogSearch = () => {\n    useEffect = () => {\n      fetch(`https://api.thedogapi.com/v1/breeds/search?q=${text}`).then(response => response.json()).then(data => setDogs(data));\n    };\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    DogSearch();\n    setSearched(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"iamintro\",\n      children: [\"Hey, you probably like dogs... Why not gather information for some..\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"max-w-xl mx-auto\",\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"search\",\n          id: \"search\",\n          placeholder: \"Search for a dog / breed\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(WebIntro, \"Zjl+SKOIPlg5NMoFC1kXwjnjmjU=\");\n_c = WebIntro;\nexport default WebIntro;\nvar _c;\n$RefreshReg$(_c, \"WebIntro\");","map":{"version":3,"names":["React","useEffect","useState","WebIntro","dogs","setDogs","text","setText","searched","setSearched","fetchDogData","res","fetch","data","json","error","console","DogSearch","then","response","handleSubmit","event","preventDefault","e","target","value"],"sources":["C:/Users/asus/Desktop/Codes/Web Developmet/doggies/src/WebIntro.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './WebIntro.css'\r\nconst WebIntro = () => {\r\n    const [dogs, setDogs] = useState([]);\r\n    const [text, setText] = useState(\"\");\r\n    const [searched, setSearched] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchDogData = async () => {\r\n          try {\r\n            const res = await fetch(\"https://api.thedogapi.com/v1/breeds\")\r\n            const data = await res.json()\r\n            setDogs(data)\r\n          } catch (error) {\r\n            console.error(error)\r\n          }\r\n        }\r\n    \r\n        setSearched(false)\r\n        fetchDogData()\r\n      }, [])\r\n\r\n    const DogSearch = () => {\r\n        useEffect = () => {\r\n            fetch(`https://api.thedogapi.com/v1/breeds/search?q=${text}`)\r\n            .then(response => response.json())\r\n            .then(data => setDogs(data));\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        DogSearch();\r\n        setSearched(true);\r\n    }\r\n    return (\r\n        <>\r\n            <div className='iamintro'>\r\n                Hey, you probably like dogs...\r\n                Why not gather information for some..\r\n                <form\r\n                onSubmit={handleSubmit}\r\n                className=\"max-w-xl mx-auto\"\r\n                autoComplete=\"off\"\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  id=\"search\"\r\n                  placeholder=\"Search for a dog / breed\"\r\n                  value={text}\r\n                  onChange={(e) => setText(e.target.value)}\r\n                />\r\n              </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WebIntro;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AAAA;AAAA;AACvB,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACZ,MAAMS,YAAY,GAAG,YAAY;MAC/B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QAC9D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;QAC7BT,OAAO,CAACQ,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDN,WAAW,CAAC,KAAK,CAAC;IAClBC,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAER,MAAMO,SAAS,GAAG,MAAM;IACpBhB,SAAS,GAAG,MAAM;MACdW,KAAK,CAAE,gDAA+CN,IAAK,EAAC,CAAC,CAC5DY,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACL,IAAI,EAAE,CAAC,CACjCI,IAAI,CAACL,IAAI,IAAIR,OAAO,CAACQ,IAAI,CAAC,CAAC;IAChC,CAAC;EACL,CAAC;EAED,MAAMO,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,EAAE;IACtBL,SAAS,EAAE;IACXR,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EACD,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,UAAU;MAAA,WAAC,sEAGtB;QACA,QAAQ,EAAEW,YAAa;QACvB,SAAS,EAAC,kBAAkB;QAC5B,YAAY,EAAC,KAAK;QAAA,uBAElB;UACE,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,QAAQ;UACb,EAAE,EAAC,QAAQ;UACX,WAAW,EAAC,0BAA0B;UACtC,KAAK,EAAEd,IAAK;UACZ,QAAQ,EAAGiB,CAAC,IAAKhB,OAAO,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA;MACzC;QAAA;QAAA;QAAA;MAAA,QACG;IAAA;MAAA;MAAA;MAAA;IAAA;EACH,iBACP;AAEX,CAAC;AAAA,GAvDKtB,QAAQ;AAAA,KAARA,QAAQ;AAyDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}